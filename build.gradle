import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
    id 'java'
    id 'maven-publish'
    id 'org.springframework.boot' version '3.5.3' apply false
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'gr.netmechanics'
version = '1.1.0'

dependencyManagement {
    imports {
        mavenBom SpringBootPlugin.BOM_COORDINATES
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.integration:spring-integration-http'

    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'com.fasterxml.woodstox:woodstox-core:7.1.0'
    implementation 'com.github.javadev:underscore21:1.68'
    implementation 'commons-validator:commons-validator:1.9.0'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly("org.projectlombok:lombok")
    testAnnotationProcessor("org.projectlombok:lombok")

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.platform:junit-platform-suite'
}

java {
    withSourcesJar()
}

artifacts {
    archives sourcesJar
}

publishing {
    repositories {
        if (project.hasProperty("nexus_username")) {
            maven {
                name = "NetmechanicsPublicNexus"
                url = 'https://nexus.nmlabs.gr/repository/m2public/'
                credentials {
                    username = "${nexus_username}"
                    password = "${nexus_password}"
                }
            }
        }
    }
    publications {
        javaMaven(MavenPublication) {
            artifactId = 'epp-client-gr'
            from components.java
        }
    }
}

// remove after https://youtrack.jetbrains.com/issue/IDEA-227215 is fixed
tasks.withType(GenerateModuleMetadata).configureEach {
    enabled = false
}

project.tasks.withType(JavaCompile).configureEach {
    options.compilerArgs.add("-parameters")
}

tasks.named('test') {
    useJUnitPlatform()
    include '**/EppClientTestSuite.class'
}
